########## 예시 ########## - 예시에서 주석만 지우고 작성하셔도 괜찮습니다.
# feat(api): 리프레시 토큰 로테이션 추가

# - (Option) 변경 이유, 상세 내용, 이슈 배경

# BREAKING CHANGE: (Option) 변경으로 인한 주의사항
# Refs: SCRUM-123, SCRUM-456



########## Commit message template ########## - 참조
# Git commit message 설정 방법은 README.md OOOO에서 확인 가능합니다.
##### 제목
# <type>(<scope>): <subject>의 형식으로 제목 구성
#  - type: feat | fix | docs | test | refactor | style | chore | ci
#  - scope: (Option) 선택적, 변경된 모듈/폴더/컴포넌트 이름(예: api, ui 등)
#  - subject: 한 줄 요약 (영문 소문자 시작 권장, 끝에 마침표 X)
#  - 제목 작성시은 50자 이내 / 변경사항이 "무엇"인지 명확히 작성 / 끝에 마침표 금지
###
# feat : 새로운 기능 추가
# fix : 버그 수정
# docs : 문서 수정
# test : 테스트 코드 추가
# refactor : 코드 리팩토링
# style : 코드 의미에 영향을 주지 않는 변경사항
# chore : 빌드 부분 혹은 패키지 매니저 수정사항
# ci : CI/CD 작업
###

##### 본문
# - 제목과 본문, 그리고 본문과 하단 분리를 위해 공백을 제공하고 있습니다. 지우지 말아주세요. (제목과 본문, 본문과 하단 분리를 위함)
# - 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 72자 이내)

##### 꼬리말
# BREAKING CHANGE: (Option) 변경으로 인한 주의사항
# Refs: 커밋과 관련된 이슈 번호(SCRUM-123, SCRUM-456)